# STEP Blockchain API - Environment Configuration
# Copy this file to .env and fill in your values

# ============================================================================
# DATABASE
# ============================================================================

# MongoDB connection URI (REQUIRED)
# Format: mongodb://[username:password@]host[:port]/database
# Example: mongodb://localhost:27017/step
# Production: mongodb+srv://user:pass@cluster.mongodb.net/step
MONGODB_URI=mongodb://localhost:27017/step

# ============================================================================
# VALIDATOR CONFIGURATION (PHASE 2)
# ============================================================================

# GPS Accuracy Threshold (meters)
# Proofs with accuracy worse than this will be rejected
# Default: 50 meters
# Lower = stricter (better security, fewer valid proofs)
# Higher = looser (more valid proofs, lower security)
GPS_MAX_ACCURACY_M=50

# Speed Limit (meters per second)
# Maximum allowed movement speed between consecutive proofs
# Default: 15 m/s (54 km/h, 33.5 mph)
# Detects teleportation attacks and GPS spoofing
# Cars at highway speed may exceed this
PROOF_SPEED_LIMIT_MPS=15

# Moratorium Period (milliseconds)
# Minimum time required between consecutive proofs from same account
# Default: 10000 ms (10 seconds)
# Prevents spam and rapid-fire proof submission
PROOF_MORATORIUM_MS=10000

# ============================================================================
# CONFIDENCE SCORING (PHASE 2.5 - ANTI-SPOOFING)
# ============================================================================

# Minimum confidence score to accept a proof (0-100)
# Recommended values:
#   - 50: Low security (development/testing only)
#   - 70: Standard security (recommended for production)
#   - 85: High security (high-value applications)
CONFIDENCE_ACCEPTANCE_THRESHOLD=70

# Require hardware attestation for all proofs
# CRITICAL: Set to true in production to block emulator/rooted attacks
# Only set to false for local development without mobile app
CONFIDENCE_REQUIRE_ATTESTATION=true

# ============================================================================
# GOOGLE PLAY INTEGRITY API (ANDROID ATTESTATION)
# ============================================================================

# Google Cloud Project ID
# Get from: https://console.cloud.google.com
GOOGLE_CLOUD_PROJECT_ID=your-project-id

# Google Cloud Project Number
# Get from: https://console.cloud.google.com (Project Settings)
GOOGLE_CLOUD_PROJECT_NUMBER=123456789012

# Service account JSON key path (for server-side verification)
GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account-key.json

# Android app package name
ANDROID_PACKAGE_NAME=com.stepblockchain.app

# ============================================================================
# APPLE DEVICECHECK / APP ATTEST (iOS ATTESTATION)
# ============================================================================

# Apple Team ID
# Get from: https://developer.apple.com/account (Membership Details)
APPLE_TEAM_ID=ABCDE12345

# iOS app bundle identifier
IOS_BUNDLE_ID=com.stepblockchain.app

# ============================================================================
# OPENCELLID API (CELL TOWER LOCATION LOOKUP)
# ============================================================================

# OpenCellID API key
# Sign up at: https://opencellid.org
# Free tier: 1,000 requests/day
OPENCELLID_API_KEY=your-opencellid-api-key

# Alternative: Mozilla Location Service (no API key needed)
# Set to true to use MLS instead of OpenCellID
USE_MOZILLA_LOCATION_SERVICE=false

# ============================================================================
# SERVER CONFIGURATION
# ============================================================================

# API Server Port
# Default: 3002 (3000 is used by frontend, 3001 by other services)
PORT=3002

# Node Environment
# Values: development | production | test
# Affects logging verbosity and error messages
NODE_ENV=development

# ============================================================================
# NOTES
# ============================================================================

# Phase 2 Configuration:
# - MongoDB is required for proof validation and storage
# - All validator thresholds have sensible defaults
# - Adjust GPS_MAX_ACCURACY_M based on your target use case
# - Adjust PROOF_SPEED_LIMIT_MPS if users will be in vehicles
# - Adjust PROOF_MORATORIUM_MS to balance spam vs user experience

# Security Notes:
# - Keep MongoDB credentials secure (use environment-specific secrets)
# - In production, use connection string with authentication
# - Consider using MongoDB Atlas for managed hosting
# - Never commit .env files to version control

# Performance Notes:
# - MongoDB connection uses pooling (maxPoolSize: 10, minPoolSize: 2)
# - Transactions ensure atomic proof validation
# - Compound unique index on (account, nonce) prevents replay attacks
